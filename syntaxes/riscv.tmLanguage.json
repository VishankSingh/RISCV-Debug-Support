{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "RISC-V Assembly",
  "scopeName": "source.riscv",
  "patterns": [
    {
      "include": "#directives"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#registers"
    },
    {
      "include": "#labels"
    },
    {
      "include": "#instructions"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#roundingmodes"
    }
  ],
  "repository": {
    "directives": {
      "patterns": [
        {
          "name": "storage.type.directive.riscv",
          "match": "\\(text|data|bss|section|global|byte|half|word|dword|float|double|string|zero)\\b"
        }
      ]
    },
    "labels": {
      "patterns": [
        {
          "name": "entity.name.function.riscv",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*:[ \\t]*"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.riscv",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.riscv",
          "match": "\\\\."
        }
      ]
    },
    "registers": {
      "patterns": [
        {
          "name": "variable.other.register.riscv",
          "match": "\\b(x[0-9]{1,2}|a[0-7]|s[0-9]|t[0-6]|f[0-9]{1,2}|v[0-1]|ra|sp|gp|tp|fp|zero|t0|t1|t2|t3|t4|t5|t6|s0|s1|s2|s3|s4|s5|s6|s7|s8|s9|s10|s11|a0|a1|a2|a3|a4|a5|a6|a7)\\b"
        },
        {
          "name": "variable.other.register.zicsr.riscv",
          "match": "\\b(csr[0-9]+|fflags|frm|fcsr)\\b"
        }
      ]
    },
    "instructions": {
      "patterns": [
        {
          "name": "keyword.instruction.base.32.riscv",
          "match": "\\b(add|sub|and|or|xor|sll|srl|sra|slt|sltu|addi|andi|ori|xori|slli|srli|srai|slti|sltiu|lb|lh|lw|lbu|lhu|sb|sh|sw|beq|bne|blt|bge|bltu|bgeu|lui|auipc|jal|jalr|ecall|ebreak)\\b"
        },
        {
          "name": "keyword.instruction.base.64.riscv",
          "match": "\\b(addw|subw|sllw|srlw|sraw|addiw|slliw|srliw|sraiw|lwu|ld|sd)\\b"
        },
        {
          "name": "keyword.instruction.pseudo.riscv",
          "match": "\\b(la|li|mv|neg|not|seqz|snez|sltiu|sltu|sltz|sgtz|beqz|bnez|bgtz|bltz|bgez|ret|nop|call)\\b"
        },
        {
          "name": "keyword.instruction.zicsr.riscv",
          "match": "\\b(csrrw|csrrs|csrrc|csrrwi|csrrsi|csrrci)\\b"
        },
        {
          "name": "keyword.instruction.mul.32.riscv",
          "match": "\\b(mul|mulh|mulhsu|mulhu|div|divu|rem|remu)\\b"
        },
        {
          "name": "keyword.instruction.mul.64.riscv",
          "match": "\\b(mulw|divw|divuw|remw|remuw)\\b"
        },
        {
          "name": "keyword.instruction.floating.32.riscv",
          "match": "\\b(flw|fsw|fmadd.s|fmsub.s|fnmadd.s|fnmsub.s|fadd.s|fsub.s|fmul.s|fdiv.s|fsqrt.s|fsgnj.s|fsgnjn.s|fsgnjx.s|fmin.s|fmax.s|fcvt.w.s|fcvt.wu.s|fcvt.s.w|fcvt.s.wu|feq.s|flt.s|fle.s|fclass.s|fmv.x.w|fmv.w.x)\\b"
        },
        {
          "name": "keyword.instruction.floating.64.riscv",
          "match": "\\b(fcvt.l.s|fcvt.lu.s|fcvt.s.l|fcvt.s.lu)\\b"
        },
        {
          "name": "keyword.instruction.doublefloating.32.riscv",
          "match": "\\b(fld|fsd|fmadd.d|fmsub.d|fnmadd.d|fnmsub.d|fadd.d|fsub.d|fmul.d|fdiv.d|fsqrt.d|fsgnj.d|fsgnjn.d|fsgnjx.d|fmin.d|fmax.d|fcvt.w.d|fcvt.wu.d|fcvt.d.w|fcvt.d.wu|feq.d|flt.d|fle.d|fclass.d|fcvt.s.d|fcvt.d.s)\\b"
        },
        {
          "name": "keyword.instruction.doublefloating.64.riscv",
          "match": "\\b(fcvt.l.d|fcvt.lu.d|fcvt.d.l|fcvt.d.lu|fmv.x.d|fmv.d.x)\\b"
        }
      ]
    },
    "roundingmodes": {
      "patterns": [
        {
          "name": "constant.other.roundingmode.riscv",
          "match": "\\b(rne|rtz|rdn|rup|rmm|dyn)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.semicolon.riscv",
          "match": ";.*$"
        },
        {
          "name": "comment.line.hash.riscv",
          "match": "#.*$"
        },
        {
          "name": "comment.block.documentation.riscv",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    }
  }
}